{"version":3,"sources":["components/Preloader/Preloader.module.css","components/Spinner/Spinner.module.css","components/WeatherBox.module.css","UI/Input.tsx","components/WeatherBox.tsx","helpers/functions.ts","actions/actions.ts","api/api.ts","config.js","reducers/appReducer.ts","assets/images/Lazy-Loader.svg","components/Preloader/Preloader.tsx","assets/images/Half-Moon-Loading.svg","components/Spinner/Spinner.tsx","App.tsx","store/store.ts","index.tsx"],"names":["module","exports","Input","type","onChange","onChangeText","onKeyPress","onEnter","restProps","error","className","spanClassName","e","currentTarget","value","key","WeatherBox","time","icon","temp","styles","weatherBox","src","Math","round","editTimeString","str","arr","split","day","slice","finalDay","join","setAppStatusAC","status","payload","catchErrorAC","api","weatherAPI","query","lat","lon","axios","get","initialState","weather","forecast","getCurrentWeatherTC","dispatch","then","res","data","catch","response","message","finally","getWeatherForecastTC","list","Preloader","backdrop","img","loader","alt","Spinner","App","useSelector","state","useDispatch","useState","setQuery","setMessage","valid","setValid","spinner","setSpinner","ref","useRef","useEffect","setTimeout","navigator","geolocation","getCurrentPosition","position","coords","latitude","long","longitude","console","log","current","innerHTML","getWeather","length","date","moment","format","placeholder","onClick","style","display","name","sys","country","main","wind","speed","humidity","temp_max","temp_min","map","dt_txt","dt","store","createStore","action","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6f67c28e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"Preloader_img__2DZQp\",\"backdrop\":\"Preloader_backdrop__1frCy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"Spinner_img__3-P_i\",\"backdrop\":\"Spinner_backdrop__1VdV2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"weatherBox\":\"WeatherBox_weatherBox__1QAcd\",\"icon\":\"WeatherBox_icon__tgcVV\",\"temp\":\"WeatherBox_temp__3DAQh\"};","import React, {\n  ChangeEvent,\n  DetailedHTMLProps,\n  InputHTMLAttributes,\n  KeyboardEvent,\n} from \"react\";\nimport \"./Input.css\";\n\ntype DefaultInputPropsType = DetailedHTMLProps<\n  InputHTMLAttributes<HTMLInputElement>,\n  HTMLInputElement\n>;\n\ntype InputPropsType = DefaultInputPropsType & {\n  onChangeText?: (value: string) => void;\n  onEnter?: () => void;\n  error?: string;\n  spanClassName?: string;\n};\n\nconst Input: React.FC<InputPropsType> = ({\n  type,\n  onChange,\n  onChangeText,\n  onKeyPress,\n  onEnter,\n  error,\n  className,\n  spanClassName,\n  ...restProps\n}) => {\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n    onChange && onChange(e);\n    onChangeText && onChangeText(e.currentTarget.value);\n  };\n  const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n    onKeyPress && onKeyPress(e);\n    onEnter && e.key === \"Enter\" && onEnter();\n  };\n\n  return (\n    <>\n      <input\n        type={\"text\"}\n        onChange={onChangeCallback}\n        onKeyPress={onKeyPressCallback}\n        className=\"search-input\"\n        {...restProps}\n      />\n    </>\n  );\n};\n\nexport default Input;\n","import React from \"react\";\r\nimport styles from \"./WeatherBox.module.css\";\r\nexport const WeatherBox: React.FC<WeatherBoxPropsType> = ({\r\n  time,\r\n  icon,\r\n  temp,\r\n}) => {\r\n  return (\r\n    <div className={styles.weatherBox}>\r\n      <div className={styles.time}>{time}</div>\r\n      <img\r\n        className={styles.icon}\r\n        src={`http://openweathermap.org/img/wn/${icon}@2x.png`}\r\n      ></img>\r\n      <div className={styles.temp}>{Math.round(temp)}Â°C</div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Types\r\ntype WeatherBoxPropsType = {\r\n  time: string;\r\n  icon: string;\r\n  temp: number;\r\n};\r\n","export const editTimeString = (str: string) => {\r\n  let arr = str.split(\" \");\r\n  let day = arr[0].split(\"-\").slice(1);\r\n  switch (day[0]) {\r\n    case \"01\":\r\n      day[0] = \"Jan\";\r\n      break;\r\n    case \"02\":\r\n      day[0] = \"Feb\";\r\n      break;\r\n    case \"03\":\r\n      day[0] = \"Mar\";\r\n      break;\r\n    case \"04\":\r\n      day[0] = \"Apr\";\r\n      break;\r\n    case \"05\":\r\n      day[0] = \"May\";\r\n      break;\r\n    case \"06\":\r\n      day[0] = \"June\";\r\n      break;\r\n    case \"07\":\r\n      day[0] = \"July\";\r\n      break;\r\n    case \"08\":\r\n      day[0] = \"Aug\";\r\n      break;\r\n    case \"09\":\r\n      day[0] = \"Sept\";\r\n      break;\r\n    case \"10\":\r\n      day[0] = \"Oct\";\r\n      break;\r\n    case \"11\":\r\n      day[0] = \"Nov\";\r\n      break;\r\n    case \"12\":\r\n      day[0] = \"Dec\";\r\n      break;\r\n  }\r\n  let finalDay = day.join(\", \");\r\n\r\n  let time = arr[1].split(\":\").slice(0, -1).join(\":\");\r\n  return `${finalDay} ${time}`;\r\n};\r\n","import {\r\n  CurrentWeatherType,\r\n  ForecastWeatherType,\r\n} from \"../reducers/appReducer\";\r\n\r\nexport const setAppStatusAC = (status: RequestStatusType) => {\r\n  return {\r\n    type: \"SET-STATUS\",\r\n    payload: {\r\n      status,\r\n    },\r\n  } as const;\r\n};\r\nexport const catchErrorAC = (error: string) => {\r\n  return { type: \"CATCH_ERROR\", payload: { error } } as const;\r\n};\r\nexport const getCurrentWeatherAC = (weather: CurrentWeatherType) => {\r\n  return { type: \"GET_CURRENT_WEATHER\", payload: { weather } } as const;\r\n};\r\nexport const getForecastAC = (forecast: ForecastWeatherType[]) => {\r\n  return { type: \"GET_FORECAST\", payload: { forecast } } as const;\r\n};\r\n\r\n// Types\r\nexport type ActionAppTypes =\r\n  | ReturnType<typeof setAppStatusAC>\r\n  | ReturnType<typeof catchErrorAC>\r\n  | ReturnType<typeof getCurrentWeatherAC>\r\n  | ReturnType<typeof getForecastAC>;\r\nexport type RequestStatusType = \"idle\" | \"loading\" | \"succeeded\" | \"failed\";\r\n","import axios from \"axios\";\r\nimport { config } from \"./../config\";\r\nlet key = config.MY_KEY;\r\nconst api = {\r\n  baseURL: \"https://api.openweathermap.org/data/2.5/\",\r\n};\r\n\r\nexport const weatherAPI = {\r\n  getCurrentWeather(query: string, lat: number | null, lon: number | null) {\r\n    return axios.get<WeatherResponseType>(\r\n      `${api.baseURL}weather?q=${query}&lat=${lat}&lon=${lon}&units=metric&appid=${key}`\r\n    );\r\n  },\r\n  getWeatherForecast(query: string, lat: number | null, lon: number | null) {\r\n    return axios.get<ForecastResponseType>(\r\n      `${api.baseURL}forecast?q=${query}&lat=${lat}&lon=${lon}&units=metric&appid=${key}`\r\n    );\r\n  },\r\n};\r\n\r\n// Types\r\nexport type ForecastResponseType = {\r\n  cod: string;\r\n  message: number;\r\n  cnt: number;\r\n  list: ListType[];\r\n  city: CityType;\r\n};\r\nexport type ListType = {\r\n  dt: number;\r\n  main: MainType;\r\n  weather: WeatherType[];\r\n  clouds: {\r\n    all: number;\r\n  };\r\n  wind: WindType;\r\n  visibility: number;\r\n  pop: number;\r\n  sys: {\r\n    pod: string;\r\n  };\r\n  dt_txt: string;\r\n};\r\nexport type CityType = {\r\n  id: number;\r\n  name: string;\r\n  coord: CoordType;\r\n  country: string;\r\n  population: number;\r\n  timezone: number;\r\n  sunrise: number;\r\n  sunset: number;\r\n};\r\nexport type WeatherResponseType = {\r\n  coord: CoordType;\r\n  weather: WeatherType[];\r\n  base: number;\r\n  main: MainType;\r\n  visibility: number;\r\n  wind: WindType;\r\n  clouds: CloudsType;\r\n  dt: number;\r\n  sys: SysType;\r\n  timezone: number;\r\n  id: number;\r\n  name: string;\r\n  cod: number;\r\n};\r\n\r\ntype CoordType = {\r\n  lon: number;\r\n  lat: number;\r\n};\r\nexport type WeatherType = {\r\n  id: number;\r\n  main: string;\r\n  description: string;\r\n  icon: string;\r\n};\r\nexport type MainType = {\r\n  temp: number;\r\n  feels_like: number;\r\n  temp_min: number;\r\n  temp_max: number;\r\n  pressure: number;\r\n  humidity: number;\r\n  sea_level: number;\r\n  grnd_level: number;\r\n};\r\nexport type WindType = {\r\n  speed: number;\r\n  deg: number;\r\n  gust: number;\r\n};\r\ntype CloudsType = {\r\n  all: number;\r\n};\r\ntype SysType = {\r\n  type: number;\r\n  id: number;\r\n  country: string;\r\n  sunrise: number;\r\n  sunset: number;\r\n};\r\n","export let config = {\r\n  MY_KEY: \"afe1289e31494c8586cf58e9e25eed17\",\r\n};\r\n","import {\r\n  ActionAppTypes,\r\n  catchErrorAC,\r\n  getCurrentWeatherAC,\r\n  getForecastAC,\r\n  RequestStatusType,\r\n  setAppStatusAC,\r\n} from \"../actions/actions\";\r\nimport { weatherAPI } from \"../api/api\";\r\nimport { ThunkType } from \"./../store/store\";\r\n\r\nconst initialState: AppInitialStateType = {\r\n  status: \"idle\",\r\n  error: \"\",\r\n  weather: null,\r\n  forecast: null,\r\n};\r\n\r\nexport const appReducer = (\r\n  state = initialState,\r\n  action: ActionAppTypes\r\n): AppInitialStateType => {\r\n  switch (action.type) {\r\n    case \"CATCH_ERROR\":\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      };\r\n\r\n    case \"SET-STATUS\":\r\n      return {\r\n        ...state,\r\n        status: action.payload.status,\r\n      };\r\n    case \"GET_CURRENT_WEATHER\":\r\n      return {\r\n        ...state,\r\n        weather: {\r\n          name: action.payload.weather.name,\r\n          sys: { country: action.payload.weather.sys.country },\r\n          main: {\r\n            temp: action.payload.weather.main.temp,\r\n            temp_min: action.payload.weather.main.temp_min,\r\n            temp_max: action.payload.weather.main.temp_max,\r\n            humidity: action.payload.weather.main.humidity,\r\n          },\r\n          weather: action.payload.weather.weather.map((e) => ({ ...e })),\r\n          wind: { speed: action.payload.weather.wind.speed },\r\n        },\r\n      };\r\n    case \"GET_FORECAST\":\r\n      return {\r\n        ...state,\r\n        forecast: action.payload.forecast.map((e) => ({ ...e })),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Thunks\r\n\r\nexport const getCurrentWeatherTC =\r\n  (query: string, lat: number | null, lon: number | null): ThunkType =>\r\n  (dispatch) => {\r\n    dispatch(setAppStatusAC(\"loading\"));\r\n    weatherAPI\r\n      .getCurrentWeather(query, lat, lon)\r\n      .then((res) => {\r\n        dispatch(getCurrentWeatherAC(res.data));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(catchErrorAC(error.response.data.message));\r\n      })\r\n      .finally(() => {\r\n        dispatch(setAppStatusAC(\"succeeded\"));\r\n      });\r\n  };\r\nexport const getWeatherForecastTC =\r\n  (query: string, lat: number | null, lon: number | null): ThunkType =>\r\n  (dispatch) => {\r\n    dispatch(setAppStatusAC(\"loading\"));\r\n    weatherAPI\r\n      .getWeatherForecast(query, lat, lon)\r\n      .then((res) => {\r\n        dispatch(getForecastAC(res.data.list));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(catchErrorAC(error.response.data.message));\r\n      })\r\n      .finally(() => {\r\n        dispatch(setAppStatusAC(\"succeeded\"));\r\n      });\r\n  };\r\n\r\n// Types\r\n\r\nexport interface AppInitialStateType {\r\n  status: RequestStatusType;\r\n  error: string;\r\n  weather: CurrentWeatherType | null;\r\n  forecast: ForecastWeatherType[] | null;\r\n}\r\nexport interface CurrentWeatherType {\r\n  name: string;\r\n  sys: { country: string };\r\n  main: MainType;\r\n  weather: WeatherType[];\r\n  wind: { speed: number };\r\n}\r\nexport interface MainType {\r\n  temp: number;\r\n  temp_min: number;\r\n  temp_max: number;\r\n  humidity: number;\r\n}\r\nexport interface ForecastWeatherType {\r\n  dt: number;\r\n  dt_txt: string;\r\n  weather: WeatherType[];\r\n  main: { temp: number };\r\n}\r\nexport interface WeatherType {\r\n  main: string;\r\n  icon: string;\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Lazy-Loader.f22415b3.svg\";","import React, { Fragment } from \"react\";\r\n\r\nimport loader from \"./../../assets/images/Lazy-Loader.svg\";\r\nimport styles from \"./Preloader.module.css\";\r\n\r\nexport const Preloader = () => {\r\n  return (\r\n    <Fragment>\r\n      <div className={styles.backdrop}>\r\n        <img className={styles.img} src={loader} alt=\"loading\" />\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/Half-Moon-Loading.fb56b74c.svg\";","import { Fragment } from \"react\";\r\nimport loader from \"./../../assets/images/Half-Moon-Loading.svg\";\r\nimport styles from \"./Spinner.module.css\";\r\n\r\nexport const Spinner = () => {\r\n  return (\r\n    <Fragment>\r\n      <div className={styles.backdrop}>\r\n        <img className={styles.img} src={loader} alt=\"loading\" />\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n","import moment from \"moment\";\nimport React, { KeyboardEvent, useEffect, useRef, useState } from \"react\";\nimport \"./App.css\";\nimport Input from \"./UI/Input\";\nimport { WeatherBox } from \"./components/WeatherBox\";\nimport { editTimeString } from \"./helpers/functions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AppStore } from \"./store/store\";\nimport {\n  getCurrentWeatherTC,\n  getWeatherForecastTC,\n} from \"./reducers/appReducer\";\nimport { Preloader } from \"./components/Preloader/Preloader\";\nimport { catchErrorAC } from \"./actions/actions\";\nimport { Spinner } from \"./components/Spinner/Spinner\";\n\nfunction App() {\n  const weather = useSelector((state: AppStore) => state.weather);\n  const forecast = useSelector((state: AppStore) => state.forecast);\n  const error = useSelector((state: AppStore) => state.error);\n  const status = useSelector((state: AppStore) => state.status);\n  const dispatch = useDispatch();\n  const [query, setQuery] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [valid, setValid] = useState(true);\n  const [spinner, setSpinner] = useState(true);\n  const ref = useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    setTimeout(() => setSpinner(false), 1500);\n  }, []);\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(function (position) {\n      let lat = position.coords.latitude;\n      let long = position.coords.longitude;\n\n      dispatch(getCurrentWeatherTC(\"\", lat, long));\n      dispatch(getWeatherForecastTC(\"\", lat, long));\n      console.log(lat, long);\n    });\n    function error() {\n      if (!ref.current) {\n        return;\n      }\n      ref!.current.innerHTML =\n        \"Unable to retrieve your location. Please, enter the city name.\";\n    }\n\n    if (!navigator.geolocation) {\n      if (!ref.current) {\n        return;\n      }\n      ref.current.innerHTML =\n        \"Geolocation is not supported by your browser. Please, enter the city name.\";\n    } else {\n      if (!ref.current) {\n        return;\n      }\n      ref.current.innerHTML = \"Locatingâ¦\";\n      navigator.geolocation.getCurrentPosition(error);\n    }\n  }, []);\n\n  const getWeather = () => {\n    if (query.length > 0) {\n      dispatch(getCurrentWeatherTC(query, null, null));\n      dispatch(getWeatherForecastTC(query, null, null));\n      setValid(true);\n      setTimeout(() => {\n        dispatch(catchErrorAC(\"\"));\n      }, 3000);\n    } else {\n      setValid(false);\n      setMessage(\"Please, enter the city name.\");\n    }\n  };\n  const search = (e: KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === \"Enter\") {\n      getWeather();\n    }\n  };\n  const searchHandler = () => {\n    getWeather();\n  };\n\n  const date = moment().format(\"dddd, MMMM Do\");\n\n  return !spinner ? (\n    <div className=\"app-wrapper\">\n      {status === \"loading\" && <Preloader />}\n\n      <main>\n        <div className=\"search-box\">\n          <Input\n            type=\"text\"\n            className=\"search-input\"\n            placeholder=\"Search...\"\n            onChange={(e) => {\n              setQuery(e.currentTarget.value);\n            }}\n            value={query}\n            onKeyPress={search}\n          />\n\n          <button onClick={searchHandler}>search</button>\n        </div>\n        <div\n          className=\"validation\"\n          style={!valid ? { display: \"block\" } : { display: \"none\" }}\n        >\n          {message}\n        </div>\n        {error && <div className=\"error\">{error}</div>}\n        {weather ? (\n          <>\n            <div className=\"location-box\">\n              <div className=\"location\">\n                {weather.name}, {weather.sys.country}\n              </div>\n              <div className=\"date\">{date}</div>\n            </div>\n            <div className=\"main-wrapper\">\n              <div className=\"weather-main\">\n                <img\n                  className=\"icon-main\"\n                  src={`http://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`}\n                ></img>\n                <div>\n                  <div className=\"temp-main\">\n                    {Math.round(weather.main.temp)}Â°C\n                  </div>\n                  <div className=\"weather-main\">{weather.weather[0].main}</div>\n                </div>\n              </div>\n\n              <div className=\"descr-main\">\n                <div>\n                  {Math.round(weather.wind.speed)}m/s\n                  <br />\n                  Wind\n                </div>\n                <div>\n                  {weather.main.humidity}%\n                  <br />\n                  Humidity\n                </div>\n                <div>\n                  {Math.round(weather.main.temp_max)}Â°C\n                  <br />\n                  High\n                </div>\n                <div>\n                  {Math.round(weather.main.temp_min)}Â°C\n                  <br />\n                  Low\n                </div>\n              </div>\n            </div>\n            <div className=\"date\">Forecast</div>\n            <div className=\"data-wrapper\">\n              {forecast &&\n                forecast.map((e) => {\n                  return (\n                    <WeatherBox\n                      key={e.dt}\n                      time={editTimeString(e.dt_txt)}\n                      icon={e.weather[0].icon}\n                      temp={e.main.temp}\n                    />\n                  );\n                })}\n            </div>\n          </>\n        ) : (\n          <div>\n            <div ref={ref} className=\"start-message\"></div>\n          </div>\n        )}\n      </main>\n    </div>\n  ) : (\n    <Spinner />\n  );\n}\n\nexport default App;\n","import { applyMiddleware } from \"redux\";\r\nimport { createStore } from \"redux\";\r\nimport thunkMiddleware, { ThunkAction } from \"redux-thunk\";\r\nimport { ActionAppTypes } from \"../actions/actions\";\r\nimport { appReducer } from \"./../reducers/appReducer\";\r\n\r\nconst store = createStore(appReducer, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;\r\n// Types\r\nexport type AppStore = ReturnType<typeof appReducer>;\r\nexport type AppActionsType = ActionAppTypes;\r\n\r\nexport type ThunkType = ThunkAction<void, AppStore, unknown, AppActionsType>;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}